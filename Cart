function Cart(){
     this.cartInternal = [];
     this.addToCart = function(a){
         this.cartInternal.push(a);
     }
     this.emptyCart = function(){ this.cartInternal = [];}
}
function checkPrice(Cont,item){
    var Co = Cont.cartInternal;
   // console.log(Co);
   for(var i in Cont.cartInternal){
     if(Co[i].type === item){
            return Co[i].total;     
            }
       }
}
function checkContents(Cont){
       var  type = Cont.cartInternal[0].type;
       var  cost = Cont.cartInternal[0].cost; 
     if(type === '' && cost === 0 ){
           console.log('No item attributes');
      }else{
           console.log('Item Valid');
      }
}

function makeItem(ty,co,ta,ca,des){
     var that = this;
   
   var item =   {
         type:ty,cost:co,tax:ta,
         calories:ca,description:des
    }
     return item;
}
var addAttr = function(s,newAttr,data){
           s[newAttr] = data;
} 
           
var soda = makeItem('Pop',3.00,1.20,150,'Delicious Pop');
addAttr(soda,'Warning Label',"Non GMOs");


function addDescription(Con,descriptionSet){
    var Set = Con.cartInternal;
    //console.log(Con);
      for(var i in Set){
         if(Set.hasOwnProperty(i)){
         Set[i].description = descriptionSet[i];
              
          }
          
      }
    
}
function printAll(Consts){
        var r = Consts.cartInternal;
       for(var i = 0;i < r.length; i++){
               console.log( r[i]);   
       }
    
    
}

var BradsCart = new Cart();
var waterMelon = 
makeItem('Watermelon',2.59,1.27,10);
var beer = makeItem('Bud Light',1.59,0,90);
var loaf = makeItem('Pillsberry',3.59,1.02,10)

var iL = new itemList();

BradsCart.addToCart(beer);
BradsCart.addToCart(waterMelon);
BradsCart.addToCart(loaf);
BradsCart.addToCart(soda);

checkContents(BradsCart);


//console.log(BradsCart.cartInternal);
AddTotal(BradsCart);
addDescription(BradsCart,['A beer that tastes like log seman','A big red fruit','Soft dough bread']);



//console.log(BradsCart);
//BradsCart.emptyCart();
//console.log(BradsCart.cartInternal);

var price = checkPrice(BradsCart,'Bud Light');
console.log(price);
var reg = new RegExp(/[d{2}o{3}]/i);
reg.test('Yabadabaddooo');
//'red'.test(/[a-z]/g);
function pass(open){
    var that = this;
    that.open = open;
    var cold = 0;
    var superMarket = {
           storeStatus:function(){
                if(that.open){
                 console.log('Come In');    
                 }else{
                 console.log('Closed');}
           },
           aileOne:function(){
           }         
    }
    
      return superMarket;
      
} 





function addATaxRate(obj,i,state){
            var taxRate;
            
         switch(state){
             case 'New York':
                  var previousTaxRate = obj[i].tax; 
                  taxRate = 0.18;
                  taxRate.toFixed(2);
                  obj[i].tax = taxRate
                  obj[i].taxChanged = true;
                  ch(obj,i,previousTaxRate);
                  
                  break;
             case 'Texas':
                  var previousTaxRate = obj[i].tax; 
                  taxRate = 0.15;
                  taxRate.toFixed(2);
                  obj[i].tax = taxRate;
                  obj[i].taxChanged = true;
                  ch(obj,i,previousTaxRate);
               
                 break; 
             case 'Boston':
                  var previousTaxRate = obj[i].tax; 
                  taxRate = 0.22;
                  taxRate.toFixed(2);
                  obj[i].tax = taxRate;
                  obj[i].taxChanged = true;
                  ch(obj,i,previousTaxRate);
               
                 break; 
             default:
                  console.log('Normal Rate');
        
         }
    
}
//Math.floor(Math.random() * 6) + 1  
function generateABarCode(){
         var arr = [];
         var sepAr = []
         var ran = Math.floor(Math.random() * 6) + 1;
         for(var i =1;i < 10; i++){
             arr[i] = ran * Math.floor(Math.random() * 6) + 1;
            
             
         
 
           
}
         console.log(arr);
}
generateABarCode();
function ch(obj,i,previousTaxRate){
    switch (obj[i].taxChanged){
           case true:
               obj[i].previousTax = [previousTaxRate];
               break;
           case false:
               
               break;
              
      }
          
    
}

var usStates = [
    { name: 'ALABAMA', abbreviation: 'AL'},
    { name: 'ALASKA', abbreviation: 'AK'},
    { name: 'AMERICAN SAMOA', abbreviation: 'AS'},
    { name: 'ARIZONA', abbreviation: 'AZ'},
    { name: 'ARKANSAS', abbreviation: 'AR'},
    { name: 'CALIFORNIA', abbreviation: 'CA'},
    { name: 'COLORADO', abbreviation: 'CO'},
    { name: 'CONNECTICUT', abbreviation: 'CT'},
    { name: 'DELAWARE', abbreviation: 'DE'},
    { name: 'DISTRICT OF COLUMBIA', abbreviation: 'DC'},
    { name: 'FEDERATED STATES OF MICRONESIA', abbreviation: 'FM'},
    { name: 'FLORIDA', abbreviation: 'FL'},
    { name: 'GEORGIA', abbreviation: 'GA'},
    { name: 'GUAM', abbreviation: 'GU'}, 
    { name: 'HAWAII', abbreviation: 'HI'},
    { name: 'IDAHO', abbreviation: 'ID'},
    { name: 'ILLINOIS', abbreviation: 'IL'},
    { name: 'INDIANA', abbreviation: 'IN'},
    { name: 'IOWA', abbreviation: 'IA'},
    { name: 'KANSAS', abbreviation: 'KS'},
    { name: 'KENTUCKY', abbreviation: 'KY'},
    { name: 'LOUISIANA', abbreviation: 'LA'},
    { name: 'MAINE', abbreviation: 'ME'},
    { name: 'MARSHALL ISLANDS', abbreviation: 'MH'},
    { name: 'MARYLAND', abbreviation: 'MD'},
    { name: 'MASSACHUSETTS', abbreviation: 'MA'},
    { name: 'MICHIGAN', abbreviation: 'MI'},
    { name: 'MINNESOTA', abbreviation: 'MN'},
    { name: 'MISSISSIPPI', abbreviation: 'MS'},
    { name: 'MISSOURI', abbreviation: 'MO'},
    { name: 'MONTANA', abbreviation: 'MT'},
    { name: 'NEBRASKA', abbreviation: 'NE'},
    { name: 'NEVADA', abbreviation: 'NV'},
    { name: 'NEW HAMPSHIRE', abbreviation: 'NH'},
    { name: 'NEW JERSEY', abbreviation: 'NJ'},
    { name: 'NEW MEXICO', abbreviation: 'NM'},
    { name: 'NEW YORK', abbreviation: 'NY'},
    { name: 'NORTH CAROLINA', abbreviation: 'NC'},
    { name: 'NORTH DAKOTA', abbreviation: 'ND'},
    { name: 'NORTHERN MARIANA ISLANDS', abbreviation: 'MP'},
    { name: 'OHIO', abbreviation: 'OH'},
    { name: 'OKLAHOMA', abbreviation: 'OK'},
    { name: 'OREGON', abbreviation: 'OR'},
    { name: 'PALAU', abbreviation: 'PW'},
    { name: 'PENNSYLVANIA', abbreviation: 'PA'},
    { name: 'PUERTO RICO', abbreviation: 'PR'},
    { name: 'RHODE ISLAND', abbreviation: 'RI'},
    { name: 'SOUTH CAROLINA', abbreviation: 'SC'},
    { name: 'SOUTH DAKOTA', abbreviation: 'SD'},
    { name: 'TENNESSEE', abbreviation: 'TN'},
    { name: 'TEXAS', abbreviation: 'TX'},
    { name: 'UTAH', abbreviation: 'UT'},
    { name: 'VERMONT', abbreviation: 'VT'},
    { name: 'VIRGIN ISLANDS', abbreviation: 'VI'},
    { name: 'VIRGINIA', abbreviation: 'VA'},
    { name: 'WASHINGTON', abbreviation: 'WA'},
    { name: 'WEST VIRGINIA', abbreviation: 'WV'},
    { name: 'WISCONSIN', abbreviation: 'WI'},
    { name: 'WYOMING', abbreviation: 'WY' }
];



addATaxRate(BradsCart.cartInternal,1,'New York');

pass(true).storeStatus();



//printAll(BradsCart);

/*usStates.forEach(function(s){ 
      console.log(s['abbreviation']);
    
});*/
Cart.storage = usStates.map(function(s){
               return s;
},[])
//var AB = 'NY'
//console.log(Cart);
/*Cart.storage.forEach(function(s){
      if(s['abbreviation'] === AB){
           console.log(s);
      }
});
*/
var u = Cart.storage.reduce(function(item,i){
         // console.log(i);
    
},{});
'Raymond Gonzalez'.split(' ');






// Your code here






